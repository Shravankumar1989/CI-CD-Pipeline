pipeline {
    agent any

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Git Checkout') {
            steps {
                echo "Git Checkout..."
                git branch: 'main', url: 'https://github.com/Shravankumar1989/CI-CD-Pipeline.git'
            }
        }

        stage('Build and Package') {
            steps {
                echo "Listing..."
                sh 'ls -ltr'
                
                echo 'Build and Package...'
                sh 'cd spring-boot-app && mvn clean package'
            }
        }

        stage('Run Unit Tests') {
            steps {
                echo 'Running unit tests...'
                sh 'cd spring-boot-app && mvn test'
            }
        }

        stage('Static Code Analysis') {
          steps {
            withSonarQubeEnv('sonar-server') {
                sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.projectName=spring-boot-app -Dsonar.projectKey=spring-boot-app '
            }
          }
        }

        stage("Quality gate"){
           steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token' 
                }
            } 
        }
    }
}
